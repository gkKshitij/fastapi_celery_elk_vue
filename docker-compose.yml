version: "6.9"

services:

  redis_server:
    image: redis


  db:
    image: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: securesense
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"


  elasticsearch:
      image: "docker.elastic.co/elasticsearch/elasticsearch-oss:7.9.3"
      container_name: elasticsearch
      environment:
          - "discovery.type=single-node"
      ports:
          - "9200:9200"
      volumes:
          - elasticsearch_data:/usr/share/elasticsearch/data

  kibana:
      image: "docker.elastic.co/kibana/kibana-oss:7.9.3"
      container_name: kibana
      ports:
          - "5601:5601"
      environment:
          - ELASTICSEARCH_HOSTS:http://elasticsearch:9200
      depends_on:
          - elasticsearch

  filebeat:
      build:
          context: ./logging
      container_name: filebeat
      volumes:
          - ./dataAndLogs/fastAPILogs:/usr/src/logs
      depends_on:
          - elasticsearch
          - kibana


  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: kk@gmail.command
      PGADMIN_DEFAULT_PASSWORD: prat1112


  fastapi:
    build: ./middleware
    container_name: fastapi-app
    command: uvicorn app.main:app --reload --workers 2 --host 0.0.0.0 --port 8000
    volumes:
      - ./middleware:/usr/src
      - ./dataAndLogs/fastAPILogs:/usr/src/logs
    environment:
      REDISSERVER: redis://redis_server:6379
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@db:5432/securesense
      C_FORCE_ROOT: "true"
      DEBUG: "True"
    ports:
      - "8004:8000"
    depends_on:
      - redis_server
      - db



  worker:
    build:
      dockerfile: ./backend/Dockerfile
      context: .
    environment:
      REDISSERVER: redis://redis_server:6379
      C_FORCE_ROOT: "true"
    depends_on:
      - redis_server
      - db


  flower:
    image: mher/flower
    command: ["celery", "--broker=redis://redis_server:6379", "flower", "--port=5555"]
    ports:
      - "5555:5555"
    depends_on:
      - redis_server


  vue:
    build:
      context: ./frontend
    ports:
      - 8080:80
    depends_on:
      - fastapi


volumes:
  postgres-data:
  elasticsearch_data:
    driver: local
