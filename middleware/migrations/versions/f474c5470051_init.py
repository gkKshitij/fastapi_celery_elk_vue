"""init

Revision ID: f474c5470051
Revises: 
Create Date: 2024-11-06 08:11:37.257935

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel             # NEW


# revision identifiers, used by Alembic.
revision = 'f474c5470051'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('databasescan',
    sa.Column('RecordID', sa.Integer(), nullable=False),
    sa.Column('scanHash', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('authenticationMethod', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('serverAddress', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('databaseName', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('databaseType', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('tableName', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('columnName', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('columnType', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('RecordID'),
    sa.UniqueConstraint('scanHash')
    )
    op.create_table('license',
    sa.Column('licenseId', sa.Integer(), nullable=False),
    sa.Column('licenseKey', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('startDate', sa.DateTime(), nullable=False),
    sa.Column('expiryDate', sa.DateTime(), nullable=False),
    sa.Column('company', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('licenseId'),
    sa.UniqueConstraint('licenseKey')
    )
    op.create_table('onedrivefile',
    sa.Column('RecordID', sa.Integer(), nullable=False),
    sa.Column('fileHash', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('fileName', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('filePath', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('fileType', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('createdDate', sa.DateTime(), nullable=False),
    sa.Column('modifiedDate', sa.DateTime(), nullable=False),
    sa.Column('owner', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('RecordID'),
    sa.UniqueConstraint('fileHash')
    )
    op.create_table('peripheralmachines',
    sa.Column('RecordID', sa.Integer(), nullable=False),
    sa.Column('macidHash', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('isActive', sa.Boolean(), nullable=False),
    sa.Column('isAvailable', sa.Boolean(), nullable=False),
    sa.Column('lastActive', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('RecordID'),
    sa.UniqueConstraint('macidHash')
    )
    op.create_table('scanresult',
    sa.Column('scanId', sa.Integer(), nullable=False),
    sa.Column('scanTypeID', sa.Integer(), nullable=False),
    sa.Column('scanStatusID', sa.Integer(), nullable=False),
    sa.Column('scanSessionID', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('scannedByID', sa.Integer(), nullable=False),
    sa.Column('scanDate', sa.DateTime(), nullable=False),
    sa.Column('TotalPII_entries', sa.Integer(), nullable=False),
    sa.Column('SeverityCritical', sa.Integer(), nullable=False),
    sa.Column('SeverityHigh', sa.Integer(), nullable=False),
    sa.Column('SeverityLow', sa.Integer(), nullable=False),
    sa.Column('ReportLink', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('scanId')
    )
    op.create_table('scanstatusnotation',
    sa.Column('scanStatusID', sa.Integer(), nullable=False),
    sa.Column('scanStatus', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('scanStatusID')
    )
    op.create_table('scantypenotation',
    sa.Column('scanTypeID', sa.Integer(), nullable=False),
    sa.Column('scanType', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('scanTypeID')
    )
    op.create_table('session',
    sa.Column('sessionId', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('loginTime', sa.DateTime(), nullable=False),
    sa.Column('lastActiveTime', sa.DateTime(), nullable=False),
    sa.Column('ipAddress', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('sessionId')
    )
    op.create_table('song',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('artist', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('systemfile',
    sa.Column('RecordID', sa.Integer(), nullable=False),
    sa.Column('fileHash', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('fileName', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('filePath', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('fileType', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('createdDate', sa.DateTime(), nullable=False),
    sa.Column('modifiedDate', sa.DateTime(), nullable=False),
    sa.Column('owner', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('peripherialID', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('RecordID'),
    sa.UniqueConstraint('fileHash')
    )
    op.create_table('user',
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pwdh', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('company', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('userId'),
    sa.UniqueConstraint('username')
    )
    op.create_table('userlicense',
    sa.Column('userLicenseID', sa.Integer(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('licenseId', sa.Integer(), nullable=False),
    sa.Column('assignedDate', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('userLicenseID')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('userlicense')
    op.drop_table('user')
    op.drop_table('systemfile')
    op.drop_table('song')
    op.drop_table('session')
    op.drop_table('scantypenotation')
    op.drop_table('scanstatusnotation')
    op.drop_table('scanresult')
    op.drop_table('peripheralmachines')
    op.drop_table('onedrivefile')
    op.drop_table('license')
    op.drop_table('databasescan')
    # ### end Alembic commands ###
